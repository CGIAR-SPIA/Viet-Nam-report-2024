#install.packages("sf")
#install.packages("ggplot2")
#install.packages("ggspatial")
#install.packages("cowplot")
#install.packages("rmapshaper")
library(sf)
library(ggplot2)
library(ggspatial)
library(cowplot)
library(haven)
library(rmapshaper)
library(readxl)
library(openxlsx)
library(readr)
library(tidyverse)
rm(list=ls())
setwd("C:/Users/simon/Dropbox/Vietnam/DATA/VHLSS_Household_2022/datasets/Shape_file/Shape_file")
# Load the shapefile
shp <- st_read("Province_with_Islands.shp")
# Merging adoption rates by province
adop_rate_prov <- read_excel("G:/Mi unidad/SPIA/Vietnam report/Mechanisation/Maps/adoption_rates_by_province.xlsx")
shp <- full_join(shp, adop_rate_prov, by = "ADM1_EN")
# Subsetting the data for Vietnam and the islands
shp_viet <- subset(shp, ADM1_EN != "Paracel Islands" & ADM1_EN != "Spratly Islands")
shp_par <- subset(shp, ADM1_EN == "Paracel Islands")
shp_spr <- subset(shp, ADM1_EN == "Spratly Islands")
# Rename regions using mutate and case_when
shp_viet <- shp_viet %>%
mutate(region = case_when(
region == "1_RRD" ~ "Red River Delta",
region == "2_NMMA" ~ "North Mountainous Area",
region == "3_NCCCA" ~ "Central Coast",
region == "4_Central Highlands" ~ "Central Highlands",
region == "5_South East" ~ "South East",
region == "6_MRD" ~ "Mekong River Delta",
TRUE ~ region  # Keeps original name if no match
))
st_write(shp_viet, "G:/Mi unidad/SPIA/Vietnam report/Mechanisation/Maps/shp_viet.shp", delete_dsn = TRUE)
# Ensure your region variable is correctly named, here assumed as "region"
region_boundaries <- shp_viet %>%
group_by(region) %>%
summarise(geometry = st_union(geometry))
# Get region centroids for labels
region_centroids <- st_centroid(region_boundaries)
#Plotting provinces with region boundaries
ggplot() +
# Plot provinces with light fill
geom_sf(data = shp_viet, fill = "lightblue", color = "grey") +
# Plot regional boundaries with a bold outline
geom_sf(data = region_boundaries, fill = NA, color = "black", size = 1.2) +
# Add region labels
geom_text(data = as.data.frame(region_centroids),
aes(x = st_coordinates(geometry)[,1],
y = st_coordinates(geometry)[,2],
label = region),
fontface = "bold", color = "darkred", size = 1.5) +
# Add titles and theme adjustments
ggtitle("Map of Vietnam by Provinces with Regional Boundaries") +
theme_minimal()
vietnam_map <- ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)
ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)
ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void()
ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient(low = "#f7efef",  high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)
ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient2(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)
# Extract the legend from the ggplot
legend <- get_legend(
ggplot(shp_viet) +
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient2(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
guides(fill = guide_colorbar(title = "In %"))
)
# Combine the main map and inset maps
combined_plot <- ggdraw(vietnam_map) +
draw_plot(islands_par, x = 0.61, y = 0.52, width = 0.09, height = 0.03) +  # Paracel Islands
draw_plot(islands_spr, x = 0.6, y = 0.05, width = 0.09, height = 0.09)    # Spratly Islands
library(sf)
library(ggplot2)
library(ggspatial)
library(cowplot)
library(haven)
library(rmapshaper)
library(readxl)
library(openxlsx)
library(readr)
library(tidyverse)
rm(list=ls())
setwd("C:/Users/simon/Dropbox/Vietnam/DATA/VHLSS_Household_2022/datasets/Shape_file/Shape_file")
# Load the shapefile
shp <- st_read("Province_with_Islands.shp")
# Merging adoption rates by province
adop_rate_prov <- read_excel("G:/Mi unidad/SPIA/Vietnam report/Mechanisation/Maps/adoption_rates_by_province.xlsx")
shp <- full_join(shp, adop_rate_prov, by = "ADM1_EN")
# Subsetting the data for Vietnam and the islands
shp_viet <- subset(shp, ADM1_EN != "Paracel Islands" & ADM1_EN != "Spratly Islands")
shp_par <- subset(shp, ADM1_EN == "Paracel Islands")
shp_spr <- subset(shp, ADM1_EN == "Spratly Islands")
# Rename regions using mutate and case_when
shp_viet <- shp_viet %>%
mutate(region = case_when(
region == "1_RRD" ~ "Red River Delta",
region == "2_NMMA" ~ "North Mountainous Area",
region == "3_NCCCA" ~ "Central Coast",
region == "4_Central Highlands" ~ "Central Highlands",
region == "5_South East" ~ "South East",
region == "6_MRD" ~ "Mekong River Delta",
TRUE ~ region  # Keeps original name if no match
))
st_write(shp_viet, "G:/Mi unidad/SPIA/Vietnam report/Mechanisation/Maps/shp_viet.shp", delete_dsn = TRUE)
# Ensure your region variable is correctly named, here assumed as "region"
region_boundaries <- shp_viet %>%
group_by(region) %>%
summarise(geometry = st_union(geometry))
# Get region centroids for labels
region_centroids <- st_centroid(region_boundaries)
#Plotting provinces with region boundaries
ggplot() +
# Plot provinces with light fill
geom_sf(data = shp_viet, fill = "lightblue", color = "grey") +
# Plot regional boundaries with a bold outline
geom_sf(data = region_boundaries, fill = NA, color = "black", size = 1.2) +
# Add region labels
geom_text(data = as.data.frame(region_centroids),
aes(x = st_coordinates(geometry)[,1],
y = st_coordinates(geometry)[,2],
label = region),
fontface = "bold", color = "darkred", size = 1.5) +
# Add titles and theme adjustments
ggtitle("Map of Vietnam by Provinces with Regional Boundaries") +
theme_minimal()
vietnam_map <- ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient2(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
)
# Main Vietnam map with regional boundaries and labels
vietnam_map_example <- ggplot(shp_viet) +
# Map provinces with the fill based on 'mech_laser_level_23'
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient2(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value = "gray", limits = c(0, 50)) +
theme_void() +
theme(
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none"
) +
# Add regional boundaries
geom_sf(data = region_boundaries, fill = NA, color = "black", size = 15) +
# Add region labels with full names
geom_text(data = as.data.frame(region_centroids),
aes(x = st_coordinates(geometry)[,1],
y = st_coordinates(geometry)[,2],
label = region),
fontface = "bold", color = "black", size = 3)
ggsave("G:/Mi unidad/SPIA/Vietnam report/Mechanisation/Maps/Map_example.jpg", plot =vietnam_map_example, width = 10, height = 7, dpi = 300)
# Inset Map for Paracel Islands with a border
islands_par <- ggplot() +
geom_sf(data = shp_par, fill = "#f7efef") +
theme_void() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5)  # Add black border around inset
)
# Inset Map for Spratly Islands with a border
islands_spr <- ggplot() +
geom_sf(data = shp_spr, fill = "#f7efef") +
theme_void() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5)  # Add black border around inset
)
###Laser Land Leveling
##2023
# Extract the legend from the ggplot
legend <- get_legend(
ggplot(shp_viet) +
geom_sf(aes(fill = mech_laser_level_23)) +
scale_fill_gradient2(low = "#f7efef",  mid = "#9ecae1", high = "#1c4c6f", na.value="#dbd0d0", limits = c(0, 50)) +
theme_void() +
guides(fill = guide_colorbar(title = "In %"))
)
# Combine the main map and inset maps
combined_plot <- ggdraw(vietnam_map) +
draw_plot(islands_par, x = 0.61, y = 0.52, width = 0.09, height = 0.03) +  # Paracel Islands
draw_plot(islands_spr, x = 0.6, y = 0.05, width = 0.09, height = 0.09)    # Spratly Islands
# Add padding to the right of the combined plot to create space for the legend
padded_plot <- plot_grid(combined_plot, NULL, ncol = 2, rel_widths = c(1, 0.1))  # Adjust the space for the legend
# Manually draw the legend, placing it with `draw_plot`
Laser_level_2023 <- ggdraw(padded_plot) +
draw_plot(legend, x = 0.7, y = 0.3, width = 0.08, height = 0.3)
ggdraw(padded_plot) +
draw_plot(legend, x = 0.7, y = 0.3, width = 0.08, height = 0.3)  # Adjust `x`, `y`, `width`, and `height` for fine-tuning
